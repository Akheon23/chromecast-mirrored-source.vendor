#
# qmake configuration for building with arm-marvell-linux-gnueabi-g++
#

include(../../common/g++.conf)
include(../../common/linux.conf)
include(../../common/qws.conf)

# modifications to g++.conf
QMAKE_CC                = ${QT_TOOLCHAIN}gcc
QMAKE_CXX               = ${QT_TOOLCHAIN}g++
QMAKE_LINK              = ${QT_TOOLCHAIN}g++
QMAKE_LINK_SHLIB        = ${QT_TOOLCHAIN}g++

# modifications to linux.conf
QMAKE_AR                = ${QT_TOOLCHAIN}ar cqs
QMAKE_OBJCOPY           = ${QT_TOOLCHAIN}objcopy
QMAKE_STRIP             = ${QT_TOOLCHAIN}strip

QMAKE_CFLAGS		= -fno-short-enums
QMAKE_LFLAGS		+=
QMAKE_INCDIR		+= ${QT_SYS_ROOT}/external/openssl/include ${QT_SYS_ROOT}/external/libpng ${QT_SYS_ROOT}/external/jpeg ${QT_SYS_ROOT}/external/freetype/include ${QT_SYS_ROOT}/external/zlib
QMAKE_LIBDIR		+= ${QT_SYS_ROOT}/out/target/product/berlin_generic/system/lib
QT_CFLAGS_DIRECTFB	= -I${QT_SYS_ROOT}/vendor/marvell-products/external/directfb/include -I${QT_SYS_ROOT}/vendor/marvell-products/external/directfb/lib
QT_LIBS_DIRECTFB	= -L${QT_SYS_ROOT}/out/target/product/berlin_generic/system/lib -ldirectfb -lfusion -ldirect -Wl,-rpath,${QT_SYS_ROOT}/out/target/product/berlin_generic/system/lib

load(qt_config)
