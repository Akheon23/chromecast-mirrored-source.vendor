#
# qmake configuration for lv2-g++
#

MAKEFILE_GENERATOR = UNIX
TARGET_PLATFORM = unix
TEMPLATE = app
CONFIG += qt warn_on release incremental link_prl
QT += core gui
QMAKE_INCREMENTAL_STYLE = sublib

# FIX - find a clean way to get these paths
THIS_DIR = $$PWD
#message("1: $$THIS_DIR")
THIS_DIR ~= s|/cygdrive||
#message("1: $$THIS_DIR")
THIS_DIR ~= s|/(.)/|\\1:/|
#message("1: $$THIS_DIR")
MKSPECS_DIR = $$dirname(THIS_DIR)
QT_DIR = $$dirname(MKSPECS_DIR)
3RDPARTY_DIR=$$dirname(QT_DIR)
TRUNK_DIR=$$dirname(3RDPARTY_DIR)

QMAKE_CC = ppu-lv2-gcc
QMAKE_CFLAGS = -isystem $$TRUNK_DIR/posix/include -isystem $$3RDPARTY_DIR/jpeg \
	-isystem $$3RDPARTY_DIR/libpng -isystem $$3RDPARTY_DIR/openssl/include \
	-isystem $$3RDPARTY_DIR/sqlite3 -isystem $$3RDPARTY_DIR/zlib \
	-mno-toc=1
QMAKE_CFLAGS_DEPS += -M
QMAKE_CFLAGS_WARN_ON += -Wall -W
QMAKE_CFLAGS_WARN_OFF += -w
QMAKE_CFLAGS_RELEASE += -Os
QMAKE_CFLAGS_DEBUG += -g -O1
QMAKE_CFLAGS_SHLIB +=
QMAKE_CFLAGS_STATIC_LIB +=
QMAKE_CFLAGS_YACC += -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_HIDESYMS  += -fvisibility=hidden
QMAKE_CFLAGS_PRECOMPILE += -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}

QMAKE_CXX = ppu-lv2-g++
QMAKE_CXXFLAGS += $$QMAKE_CFLAGS -fno-rtti -fno-exceptions
QMAKE_CXXFLAGS_DEPS += $$QMAKE_CFLAGS_DEPS
QMAKE_CXXFLAGS_WARN_ON += $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF += $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE += $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG += $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB += $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_STATIC_LIB += $$QMAKE_CFLAGS_STATIC_LIB
QMAKE_CXXFLAGS_YACC += $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_HIDESYMS += $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
QMAKE_CXXFLAGS_PRECOMPILE += -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_LINK = ppu-lv2-g++
QMAKE_LINK_SHLIB = ppu-lv2-g++
QMAKE_LINK_C = ppu-lv2-gcc
QMAKE_LINK_C_SHLIB = ppu-lv2-gcc
QMAKE_LFLAGS += -fno-exceptions -fno-rtti
QMAKE_LFLAGS_RELEASE +=
QMAKE_LFLAGS_DEBUG +=
QMAKE_LFLAGS_APP +=
QMAKE_LFLAGS_SHLIB += -mprx -zgenprx -zgenstub
QMAKE_LFLAGS_PLUGIN += $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME +=
QMAKE_LFLAGS_THREAD +=
QMAKE_LFLAGS_NOUNDEF += -Wl,--no-undefined
QMAKE_LFLAGS_RPATH =

QMAKE_PCH_OUTPUT_EXT = .gch

# -Bsymbolic-functions (ld) support
QMAKE_LFLAGS_BSYMBOLIC_FUNC =
QMAKE_LFLAGS_DYNAMIC_LIST =

QMAKE_CFLAGS_THREAD   += -D_REENTRANT
QMAKE_CXXFLAGS_THREAD += $$QMAKE_CFLAGS_THREAD

QMAKE_INCDIR          =
QMAKE_LIBDIR          =
QMAKE_INCDIR_X11      =
QMAKE_LIBDIR_X11      =
QMAKE_INCDIR_QT       = $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT       = $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL   =
QMAKE_LIBDIR_OPENGL   =
QMAKE_INCDIR_OPENGL_ES1 = $$QMAKE_INCDIR_OPENGL
QMAKE_LIBDIR_OPENGL_ES1 = $$QMAKE_LIBDIR_OPENGL
QMAKE_INCDIR_OPENGL_ES1CL = $$QMAKE_INCDIR_OPENGL
QMAKE_LIBDIR_OPENGL_ES1CL = $$QMAKE_LIBDIR_OPENGL
QMAKE_INCDIR_OPENGL_ES2 = $$QMAKE_INCDIR_OPENGL
QMAKE_LIBDIR_OPENGL_ES2 = $$QMAKE_LIBDIR_OPENGL
QMAKE_INCDIR_EGL      =
QMAKE_LIBDIR_EGL      =
QMAKE_INCDIR_OPENVG   =
QMAKE_LIBDIR_OPENVG   =

QMAKE_LIBS            =
QMAKE_LIBS_DYNLOAD    = -lc_stub -lm_stub -lstdc++_stub -lsupc++
QMAKE_LIBS_X11        =
QMAKE_LIBS_X11SM      =
QMAKE_LIBS_NIS        =
QMAKE_LIBS_EGL        =
QMAKE_LIBS_OPENGL     =
QMAKE_LIBS_OPENGL_QT  =
QMAKE_LIBS_OPENGL_ES1 =
QMAKE_LIBS_OPENGL_ES1CL =
QMAKE_LIBS_OPENGL_ES2 =
QMAKE_LIBS_OPENVG     =
QMAKE_LIBS_THREAD     = -lpthread

QMAKE_MOC             = $$[QT_INSTALL_BINS]/moc
QMAKE_UIC             = $$[QT_INSTALL_BINS]/uic

QMAKE_AR              = ppu-lv2-ar cqs
QMAKE_OBJCOPY         = ppu-lv2-objcopy
QMAKE_RANLIB          =

QMAKE_TAR             = tar -cf
QMAKE_GZIP            = gzip -9f

QMAKE_COPY            = cp -f
QMAKE_COPY_FILE       = $(COPY)
QMAKE_COPY_DIR        = $(COPY) -r
QMAKE_MOVE            = mv -f
QMAKE_DEL_FILE        = rm -f
QMAKE_DEL_DIR         = rmdir
QMAKE_STRIP           = ppu-lv2-strip strip
QMAKE_STRIPFLAGS_LIB += --strip-unneeded
QMAKE_CHK_DIR_EXISTS  = test -d
QMAKE_MKDIR           = mkdir -p
QMAKE_INSTALL_FILE    = install -m 644 -p
QMAKE_INSTALL_PROGRAM = install -m 755 -p

include(../common/unix.conf)
load(qt_config)
